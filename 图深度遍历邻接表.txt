#include <algorithm>
#include <iostream>
#include <vector>

using  namespace std;

const int MAX_V = 1000;
const  int INF = -1;
int n,G[MAX_V][MAX_V];

bool vis[MAX_V] = {false};

vector<int> Adj[MAX_V];

void DFS(int u, int depth)
{
	vis[u] = true;
	for (int i = 0; i < Adj[i].size(); ++i)
	{
		int v= Adj[u][i];
		if (vis[v] == false)
			DFS(v, depth + 1);
	}
}

void DFSTrave()
{
	for (int i = 0; i < n; ++i)
	{
		if (vis[i] == false)
			DFS(i ,1);
	}
}